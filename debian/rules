#!/usr/bin/make -f
#
# Copyright 2018, 2020 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Map supported platform to the kernel type that it uses.
KERNEL_TYPE.aws := aws
KERNEL_TYPE.azure := azure
KERNEL_TYPE.esx := generic
KERNEL_TYPE.gcp := gcp
KERNEL_TYPE.hyperv := azure
KERNEL_TYPE.kvm := generic
KERNEL_TYPE.oci := oracle

DELPHIX_SIGNATURE_TYPES = registration upgrade

#
# The following meta-package consolidates all the kernel packages required
# by the Delphix Appliance for a given platform. Note that delphix-kernel
# only has dependencies on kernel modules and tools that are built for a
# specific version of the kernel. Any additional tools that are not specific
# to a particular kernel version should be included in the "tools.list.chroot"
# file.
#
DEPENDS = delphix-kernel-$(KERNEL_TYPE.$(TARGET_PLATFORM)),

#
# The following packages are required in order to generate VM artifacts
# that are leveraging ZFS as their root filesystem.
#
DEPENDS += grub-pc, \
	   delphix-zfs,

#
# The following packages provide the minimal set of packages that are
# necessary to create a working system (e.g. networking, users, etc).
#
DEPENDS += ansible, \
	   auditd, \
	   cloud-init, \
	   debootstrap, \
	   debsums, \
	   net-tools, \
	   openssh-server, \
	   openssl, \
	   policykit-1, \
	   python3, \
	   rng-tools, \
	   systemd-container, \
	   ubuntu-minimal,

# Debugging symbols for packages pulled in by the the above dependencies
DEPENDS += systemd-dbgsym, \
	   dbus-dbgsym, \
	   openssh-server-dbgsym, \
	   openssh-client-dbgsym, \
	   coreutils-dbgsym, \
	   bash-dbgsym, \
	   iproute2-dbgsym, \
	   net-tools-dbgsym,

#
# The following package contains the GPG keys which allow us to download
# from the repositories which contain packages containing debug symbols.
#
DEPENDS += ubuntu-dbgsym-keyring,

#
# sh module for python. This is currently used by the migrationctl utility.
#
DEPENDS += python3-sh, \
	   python-sh,

#
# Those meta-packages are generated by linux-pkg when building the kernel
# and userland package lists. They store build-info such as git hash, url
# and branch for each package in the list that was built. The build-info is
# available on the Delphix Appliance in /lib/delphix-buildinfo/.
#
DEPENDS += delphix-buildinfo-userland,
DEPENDS += delphix-buildinfo-kernel,

#
# The CRA PAM module provides an authentication method for the delphix user.
#
DEPENDS += pam-challenge-response, \
	   pam-challenge-response-dbgsym,

# Platform-specific dependencies
DEPENDS.aws =
DEPENDS.azure = walinuxagent, linux-cloud-tools-azure,
DEPENDS.esx = open-vm-tools,
DEPENDS.gcp = gce-compute-image-packages, python-google-compute-engine, \
	   python3-google-compute-engine,
DEPENDS.hyperv = linux-cloud-tools-azure,
DEPENDS.kvm =
DEPENDS.oci =
DEPENDS += $(DEPENDS.$(TARGET_PLATFORM))

#
# These packages are tools that are intended for human convenience. The
# product should not rely on them programmatically. They may be updated
# or replaced without regard for backward compatibility.
#
DEPENDS += bcc-tools, \
	   bpftrace, \
	   crash, \
	   crash-python, \
	   dnsutils, \
	   drgn, \
	   drgn-dbgsym, \
	   dstat, \
	   emacs-nox, \
	   ethtool, \
	   gdb, \
	   gdb-python, \
	   glances, \
	   htop, \
	   iftop, \
	   inotify-tools, \
	   iotop, \
	   jq, \
	   kdump-tools, \
	   makedumpfile-dbgsym, \
	   mtr, \
	   libkdumpfile, \
	   libkdumpfile-dbgsym, \
	   lsof, \
	   man-db, \
	   manpages, \
	   manpages-dev, \
	   memstat, \
	   ncdu, \
	   pciutils, \
	   performance-diagnostics, \
	   procinfo, \
	   psmisc, \
	   ptools, \
	   ptools-dbgsym, \
	   pv, \
	   screen, \
	   sdb, \
	   sg3-utils, \
	   snmp, \
	   snmp-mibs-downloader, \
	   strace, \
	   sysstat, \
	   tmux, \
	   trace-cmd, \
	   traceroute, \
	   tshark, \
	   vim

%:
	dh $@

override_dh_install:
	#
	# All the files that we want to include in this package have to
	# be copied into debian/tmp. debian/tmp is a special directory
	# which is cleaned up automatically when dpkg-buildpackage is run.
	# Also, when --auto-dest is passed to dh_install, "debian/tmp" is
	# stripped from the destination path.
	#
	mkdir -p debian/tmp

	#
	# Each platform's package contains the commond set of files in
	# files/common as well as the platform-specific files in
	# files/PLATFORM.
	#
	cp -r files/common/* debian/tmp/
	if [ -d files/$(TARGET_PLATFORM)/ ]; then \
		cp -r files/$(TARGET_PLATFORM)/* debian/tmp/; \
	fi

	sed "s/@@TARGET_PLATFORM@@/$(TARGET_PLATFORM)/" \
		debian/tmp/var/lib/delphix-appliance/platform.in \
		>debian/tmp/var/lib/delphix-appliance/platform
	rm debian/tmp/var/lib/delphix-appliance/platform.in

	for type in $(DELPHIX_SIGNATURE_TYPES) ; do \
		./scripts/download-signature-key.sh $$type "$(DELPHIX_SIGNATURE_VERSION)" \
		>"debian/tmp/var/lib/delphix-appliance/key-public.pem.$$type.$(DELPHIX_SIGNATURE_VERSION)" ; done

	dh_install --autodest "debian/tmp/*"

override_dh_gencontrol:
	dh_gencontrol -- -Vdelphix:Depends="$(DEPENDS)"

override_dh_auto_build:
	#
	# Don't run default make target during the build step; there
	# isn't anything that needs to be built.
	#

override_dh_auto_test:
	#
	# Don't run 'make test' during the build step; we'll enforce
	# testing via another mechanism, so running it during package
	# builds is unnecessary.
	#

