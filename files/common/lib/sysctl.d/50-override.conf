#
# Copyright 2018, 2022 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# Application cores should be written into /var/crash, and tagged with
# the execname, process id, and seconds since the epoch. This way, the
# filenames are unique (process id and seconds since the epoch), and
# also contain some information about what crashed (execname).
#
kernel.core_pattern = /var/crash/core.%e.%p.%t

#
# Randomize virtual address space (memory segment) to prevent malicious attack.
#
kernel.randomize_va_space = 2

#
# Enable the use of /proc/sysrq-trigger
#
kernel.sysrq = 1

#
# Enable gathering of crash dumps by sending NMI.
#
kernel.unknown_nmi_panic = 1

#
# We don't want to have our secondary addresses deleted when someone
# deletes the primary IP address of a network interface; thus, we enable
# the promotion of secondary addresses to primary ones.
#
net.ipv4.conf.all.promote_secondaries = 1
net.ipv4.conf.default.promote_secondaries = 1

#
# Make the various TCP timeouts much shorter than the defaults, so that,
# in the case of all errors except brief network outages, we quickly
# give our application logic control over error handling. In each case
# (when retransmitting a SYN, when retransmitting on an established
# connection, and when the connection is idle), we set parameters such
# that the TCP connection will be aborted after about 60s of waiting
# without response.
#
net.ipv4.tcp_syn_retries = 5
net.ipv4.tcp_retries2 = 7
net.ipv4.tcp_keepalive_time = 15
net.ipv4.tcp_keepalive_intvl = 15
net.ipv4.tcp_keepalive_probes = 4

#
# Increase the global network and TCP buffer sizes.
#
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.ipv4.tcp_wmem = 4096 16777216 16777216
net.ipv4.tcp_rmem = 4096 4194304 16777216

#
# Force the kernel to allow memory allocations to succeed until we
# actually run out of memory. The default heuristic can cause failures
# to generate an hprof dump on OOM in the stack. Allowing overcommit
# lets the fork(2) to succeed despite not having enough memory which
# allows the script that generates the hprof dump to run.
#
vm.overcommit_memory = 1

#
# By default all mounts are "shared" with other mount peer groups.
# As a results any new mount will propagate the mount event to other
# mount namespaces that is part of that peer group. This means that the
# counts associated with a mount namespace may be higher than the number
# of actual mounts in the initial namespace. We have observed that
# systemd-resolved and systemd-networkd have twice the number of mounts
# compared to the initial mount namespace. Additionally, as we create
# containers systemd-resolved and systemd-networkd will add the mounts
# from the initial namespace again. This can lead to an inflation of
# 3 times what is actually mounted. In order to be able to support
# 100,000 filesystems in the initial namespace the maximum number of
# mounts allowed by the system must be 3 times the supported value.
#
fs.mount-max = 300000

#
# We've seen cases where an NFSv4 delegation is revoked by the server,
# which then results in client IO errors. We disable NFSv4 delegation
# entirely here, to avoid the problem.
#
fs.leases-enable = 0

#
# Ubuntu 20.04 OS hardening changes for CIS benchmarking
# ICMP Redirects, send routing information to other hosts is not
# required because this host is not acting as a router.
#
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

#
# A system with multiple interfaces need net.ipv4.ip_forward
# to forward the packets, which is not required.
#
net.ipv4.ip_forward = 0

#
# Source routing is not required in this host to partially or
# fully specify the route packets take through a network.
#
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

#
# ICMP redirect messages are packets that convey routing
# information and tell your host (acting as a router) to
# send packets via an alternate path. Not required
#
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0

#
# Secure ICMP redirects are not accepted
#
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

#
# Ensure suspicious packets are logged, this feature logs
# packets with un-routable source addresses to the kernel
# log.
#
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

#
# Enable system to ignore all ICMP echo and timestamp
# requests to broadcast and multicast addresses.
#
net.ipv4.icmp_echo_ignore_broadcasts = 1

#
# Some routers (and some attackers) will send responses
# that violate RFC-1122 and attempt to fill up a log file
# system with many useless error messages.
#
net.ipv4.icmp_ignore_bogus_error_responses = 1

#
# Stop Attackers to use SYN flood attacks to perform a
# denial of service attacked on a system by sending many
# SYN packets without completing the three way handshake.
#
net.ipv4.tcp_syncookies = 1
