#
# Copyright 2019 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

#
# We want to execute this service as early as possible since it will be
# finalizing the network configuration after an OS migration. Since it will
# also be importing domain0, which is normally imported by the
# zfs-import-cache service, we add similar dependencies to it
# (i.e. devices must be ready, so run after systemd-udev-settle.service, and
# service is required by zfs-import.target). The service needs to access
# files in /var/delphix so we add a dependency on the /var/delphix mountpoint.
# Note that /var/delphix comes from the root pool, which is imported on boot,
# so this dependency doesn't conflict with the zfs-import.target.
#
# Finally, we must make sure to remove default service dependencies, as
# those would create a dependency cycle. We still want this service to
# start after local-fs.target as delphix-migration can make direct
# or indirect calls to "systemctl daemon-reload", which interacts badly
# with mount services created from /etc/fstab.
# See https://github.com/systemd/systemd/issues/10872 for more details.
#
# We depend on /var/delphix being present, so we add an explicit dependency
# on var-delphix.mount. Although this dependency is already covered by
# local-fs.target, it is better to be more explicit in case we decided to
# remove the latter.
#
# The OS network migration code, even though it doesn't list the
# netplan file generated by cloud-init as a hard dependency, it can
# experience a race as the one pointed in DLPX-67281, where the
# cloud-init-local service runs around the same time and generates
# the default netplan file while we write our custom one on-disk
# through the netconf-migrator. This is bad because we end up with two
# netplan files that can have conflicting information for networkd.
# To avoid this scenario, we make sure that this service runs AFTER
# cloud-init-local.
#
[Unit]
Description=Delphix OS Migration Service
PartOf=delphix.target
DefaultDependencies=no
After=systemd-udev-settle.service
After=cloud-init-local.service
After=var-delphix.mount
After=local-fs.target
Before=network-pre.target
Before=zfs-import.target
#
# If migration failed after domain0 was imported, we want to make sure
# that on reboot this service won't race with zfs-import-cache.service
# which will also try to import domain0.
#
Before=zfs-import-cache.service

#
# When the delphix-migration service is restarted manually following a
# failure, we need to ensure that it is run before services that depend
# on it.
#
Before=rtslib-fb-targetctl.service
Before=delphix-platform.service
Before=delphix-postgres@default.service

[Service]
Type=oneshot
ExecStart=/var/lib/delphix-platform/os-migration
RemainAfterExit=yes

#
# Disable the service once it has run succesfully.
# Even though the service does nothing when the flag file is not there,
# disabling it has the advantage of simplifying systemd dependencies.
# We have seen that reloading systemd can impact other services, like
# mounting local filesystems. We use the "no-reload" flag to prevent this.
#
ExecStartPost=/bin/systemctl disable --no-reload delphix-migration.service

[Install]
WantedBy=delphix.target

#
# By Setting RequiredBy dependencies in the Install section, this enforces
# those dependencies only when the delphix-migration service is enabled. If
# the delphix-migration service is disabled, those dependencies are removed.
#
RequiredBy=rtslib-fb-targetctl.service
RequiredBy=delphix-platform.service
RequiredBy=delphix-postgres@default.service
