#!/bin/bash
#
# Copyright 2018 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -o pipefail

SOURCE_DIRECTORY="$(readlink -f "${BASH_SOURCE%/*}")"
DLPX_ANSIBLE_DIRECTORY="${DLPX_ANSIBLE_DIRECTORY:-$SOURCE_DIRECTORY}"
ROOT_FILESYSTEM=$(zfs list -Ho name /)

#
# If we are running as part of live-build, the root of the appliance's
# filesystem won't be /
#
APPLIANCE_ROOT_DIR="$SOURCE_DIRECTORY/../../../.."
PLATFORM=$(cat "$APPLIANCE_ROOT_DIR/var/lib/delphix-appliance/platform")

function find_playbooks() {
	if ! find "$DLPX_ANSIBLE_DIRECTORY" \
		-maxdepth 2 \
		-mindepth 2 \
		-name playbook.yml | sort -n; then
		echo "Failure when finding playbooks." 2>&1
		return 1
	fi
}

function apply_playbook() {
	if ! ansible-playbook -vvv \
		-c "$DLPX_ANSIBLE_CONNECTION" \
		-i "$DLPX_ANSIBLE_INVENTORY" \
		-e "root_filesystem=${ROOT_FILESYSTEM}" \
		-e "platform=$PLATFORM" \
		"$1"; then
		echo "Failure when applying playbook." 2>&1
		exit 1
	fi
}

#
# To reduce the bootup latency and the latency to start services that
# depend on this service, we only want to apply the configuration a
# single time. This way, the configuration will be applied on the first
# boot, but not on subsequent boots. This will allow the bootup time for
# the subsequent boots to be quicker.
#
# Thus, if this "ansible-done" file is present, this signifies that the
# ansible configuration has already been applied, so there's no need to
# apply this configuration again.
#
# We don't use Systemd's "ConditionPathExists" directive to disable the
# service after it's been run once, for a couple of reasons:
#
# 1. That would cause the service to enter a "failed" state when the
#    file exists. This isn't the behavior we want, since it then makes
#    it more difficult for other services to depend on this service
#    running successfully.
#
# 2. When the file exists, restarting "delphix-platform" would not
#    result in restarting services that depend on "delphix-platform". We
#    rely on restarts to "delphix-platfrom" causing restarts to all
#    dependent services, so we need to ensure this functionality
#    continues to work, even if the ansible configuration doesn't have
#    to be re-applied.
#
if [[ -f /var/lib/delphix-platform/ansible-done ]]; then
	exit 0
fi

if [[ -z "$DLPX_ANSIBLE_DIRECTORY" ]]; then
	echo "DLPX_ANSIBLE_DIRECTORY is unset." >&2
	exit 1
fi

if [[ -z "$DLPX_ANSIBLE_CONNECTION" ]]; then
	echo "DLPX_ANSIBLE_CONNECTION is unset." >&2
	exit 1
fi

if [[ -z "$DLPX_ANSIBLE_INVENTORY" ]]; then
	echo "DLPX_ANSIBLE_INVENTORY is unset." >&2
	exit 1
fi

if [[ "$(find_playbooks | wc -l)" -eq "0" ]]; then
	echo "No playbooks found in '$DLPX_ANSIBLE_DIRECTORY'." >&2
	exit 1
fi

playbooks=$(find_playbooks) || exit 1
for playbook in $playbooks; do
	apply_playbook "$playbook"
done

#
# This script is executed as part of the appliance-build process so that
# configuration that's required before the first boot (e.g. bootloader)
# can be applied using the same mechanism as configuration that can be
# applied after the first boot.
#
# Thus, when this script is executed in this way, via appliance-build,
# we need to be careful not to try to create this file. Otherwise we'd
# modify the root filesystem of the system running the build, rather
# than the Delphix appliance's root filesystem that's being configured.
#
# We detect if this script is being executed via appliance-build or not,
# by inspecting this environment variable. It will be set to "chroot"
# only by appliance-build; otherwise it should contain the value "local".
#
if [[ "$DLPX_ANSIBLE_CONNECTION" != "chroot" ]]; then
	touch /var/lib/delphix-platform/ansible-done
fi
