#!/bin/bash
#
# Copyright 2019, 2020 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

set -o errexit
set -o pipefail

function usage() {
	echo "Usage: $(basename "$0") [-hMmps]"
	echo
	echo "Display the version information for the appliance. By default,"
	echo "the full version (major, minor, patch portions, and jenkins "
	echo "information, if it exists) are displayed."
	echo "The following arguments may be used to refine the version"
	echo "information:"
	echo "-h, --help -- displays usage"
	echo "-M, --major -- displays the major version"
	echo "-m, --minor -- displays the major and minor version"
	echo "-p, --patch -- displays the major, minor, and patch version"
	echo "-s, --snapshot -- displays the major, minor, patch, and " \
		"snapshot information"
	exit 2
}

options=$(getopt -l "help,major,minor,patch,snapshot" -o "hMmps" -- "$@")
eval set -- "$options"

output=$(zfs get -Hpo value \
	"com.delphix:current-version" \
	"$(dirname "$(zfs list -Hpo name /)")")

if [[ $# -gt 2 ]]; then
	echo "Error: Only one option may be selected"
	usage
fi

if [[ $# -eq 1 ]]; then
	echo "$output" | tr -d '\n'
	shift
fi

while [[ $# -gt 0 ]]; do
	case "$1" in
	-h | --help)
		usage
		break
		;;
	-M | --major)
		echo "$output" | cut -d'.' -f1,2 | tr -d '\n'
		break
		;;
	-m | --minor)
		echo "$output" | cut -d'.' -f1-3 | tr -d '\n'
		break
		;;
	-p | --patch)
		echo "$output" | cut -d'-' -f1 | cut -d'.' -f1-4 | tr -d '\n'
		break
		;;
	-s | --snapshot)
		echo "$output" | cut -d'+' -f1 | tr -d '\n'
		break
		;;
	--)
		shift
		break
		;;
	esac
done
exit 0
