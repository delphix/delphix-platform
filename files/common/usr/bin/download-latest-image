#!/bin/bash
#
# Copyright 2019 Delphix
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function die() {
	echo "$(basename "$0"): $*" >&2
	exit 1
}

function usage() {
	echo "$(basename "$0"): $*" >&2
	echo "Usage: $(basename "$0") [-f] <variant>"
	exit 2
}

function cleanup() {
	rm -f latest
}

opt_f=false
while getopts ':f' c; do
	case "$c" in
	f) eval "opt_$c=true" ;;
	*) usage "illegal option -- $OPTARG" ;;
	esac
done
shift $((OPTIND - 1))

[[ $# -gt 1 ]] && usage "too many arguments specified"
[[ $# -eq 0 ]] && usage "too few arguments specified"

$opt_f && rm -f "latest" >/dev/null 2>&1
[[ -f "latest" ]] && die "file 'latest' already exists"

#
# We don't want to delete the "latest" file if it already exists and the
# "-f" option isn't specified, so we need to be careful to register this
# cleanup handler after checking to see if the "-f" option (done above).
#
trap cleanup EXIT

aws s3 cp \
	"s3://snapshot-de-images/builds/jenkins-ops/devops-gate/master/appliance-build/master/post-push/latest" \
	. || die "failed to download file: 'latest'"

$opt_f && rm -f "$1.upgrade.tar.gz" >/dev/null 2>&1
[[ -f "$1.upgrade.tar.gz" ]] && die "image $1.upgrade.tar.gz already exists"

aws s3 cp "s3://snapshot-de-images/$(cat latest)/upgrade-artifacts/$1.upgrade.tar.gz" . ||
	die "failed to download file: '$1.upgrade.tar.gz'"
